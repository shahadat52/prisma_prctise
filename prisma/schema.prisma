// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id            Int             @id @default(autoincrement())
  title         String
  content       String
  published     Boolean         @default(false)
  authorId      Int
  user          User            @relation(fields: [authorId], references: [id], onDelete: Cascade)
  createdAt     DateTime        @default(now())
  updateAt      DateTime        @updatedAt
  post_Category Post_Category[]

  @@map("posts")
}

model Category {
  id            Int             @id @default(autoincrement())
  name          String
  post_Category Post_Category[]

  @@map("categories")
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])

  @@map("profiles")
}

enum UserRole {
  user
  admin
}

model User {
  id       Int      @id @default(autoincrement())
  userName String   @unique
  email    String
  age      Int      @default(0)
  role     UserRole @default(user)
  profile  Profile? //one to one relation
  post     Post[] // one to many relation

  @@map("users")
}

model Post_Category {
  postId Int
  post   Post @relation(fields: [postId], references: [id])

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
  @@map("post_categories")
}
